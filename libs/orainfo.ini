[info]
databaseInfoSql = select dbid,
       name,
       created,
       log_mode,
       database_role,
       open_mode,
       guard_status,
       platform_name,
       flashback_on
  from v$database
instanceInfoSql = select instance_number,
       instance_name,
       host_name,
       version,
       startup_time,
       status,
       archiver
  from v$instance
hostInfoSql = select case stat_name
         when 'NUM_CPUS' then
          'Logic CPUs'
         when 'NUM_CPU_CORES' then
          'CPU cores'
         when 'NUM_CPU_SOCKETS' then
          'Physics CPUs'
         when 'PHYSICAL_MEMORY_BYTES' then
          'Memory（GB）'
       end,
       case stat_name
         when 'PHYSICAL_MEMORY_BYTES' then
          ceil(round(value / 1000 / 1000 / 1000, 0))
         else
          value
       end value
  from v$osstat
 where stat_name in ('NUM_CPUS', 'NUM_CPU_CORES', 'NUM_CPU_SOCKETS',
        'PHYSICAL_MEMORY_BYTES')

databaseInfoNameList = dbid,name,created,log_mode,database_role,open_mode,guard_status,platform_name,flashback_on
instanceInfoNameList = instance_number,instance_name,host_name,version,startup_time,status,archiver
hostInfoNameList = stat_name,value

databaseInfoData = databaseinfodata
instanceInfoData = instanceinfodata
hostInfoData = hostinfodata

[user]
userSql = select username,account_status,lock_date,
                      expiry_date,default_tablespace,created from dba_users
                      where username not in ('SPATIAL_WFS_ADMIN_USR','XS$NULL','MDDATA','DIP','APEX_PUBLIC_USER'
                      ,'SCOTT','SPATIAL_CSW_ADMIN_USR','ORACLE_OCM','FLOWS_FILES','MDSYS','ORDDATA','ORDSYS','CTXSYS'
                      ,'ANONYMOUS','EXFSYS','DBSNMP','WMSYS','SYSMAN','XDB','APPQOSSYS','ORDPLUGINS','APEX_030200'
                      ,'OWBSYS_AUDIT','OWBSYS','SI_INFORMTN_SCHEMA','OLAPSYS','MGMT_VIEW','OUTLN')

userNameList = username,account_status,lock_date,expiry_date,default_tablespace,created

userData = userdata

[session]
activeSessionSql = SELECT T1.SID,
       T1.SERIAL#,
       T1.USERNAME,
       T1.STATUS,
       T1.MACHINE,
       T1.SQL_ID,
       T1.SQL_CHILD_NUMBER,
       T1.ROW_WAIT_OBJ#,
       T1.EVENT,
       T1.LAST_CALL_ET,
       substr(T2.SQL_TEXT,0,20),
       dbms_lob.substr(T2.SQL_FULLTEXT)
  FROM V$SESSION T1
  LEFT JOIN V$SQLAREA T2 ON T1.SQL_ID = T2.SQL_ID
                        AND T1.SQL_ADDRESS = T2.ADDRESS
                        AND T1.SQL_HASH_VALUE = T2.HASH_VALUE
 WHERE T1.STATUS = 'ACTIVE'
   AND T1.USERNAME IS NOT NULL
 ORDER BY T1.LAST_CALL_ET DESC
connSessionSql = Select Username,MACHINE, status,Count(*)
   From V$session
  Group By Username,MACHINE,status
  Order By Username,MACHINE,status,4 Desc
resourceSessionSql = select *
  from v$resource_limit
 where resource_name in ('sessions', 'processes')

activeNameList = sid,serial,username,status,machine,sql_id,sql_child_number,row_wait_obj#,event,last_call_et,sql_text,full_sql
connNameList = username,machine,status,cnt
resourceSession = name,current,max,init,limit

activeData = activedata
connData = conndata
resourceSessionData = resourcesessiondata

[lock]
lockSql = select t2.SID,
       t2.SERIAL#,
       t2.USERNAME,
       t2.STATUS,
       t2.MACHINE,
       t2.SQL_ID,
       t3.owner,
       t3.object_name,
       t1.LOCKED_MODE
  from v$locked_object t1
  join v$session t2 on t1.SESSION_ID = t2.SID
  join dba_objects t3 on t1.OBJECT_ID = t3.OBJECT_ID
blockSql = select sid,
       sess_serial#,
       wait_id,
       wait_event,
       wait_event_text,
       t1.BLOCKER_INSTANCE_ID,
       blocker_sid,
       blocker_sess_serial#
  from v$session_blockers t1

lockNameList = sid,serial#,username,status,machine,sql_id,owner,object_name,locked_mode
blockNameList = sid,sess_serial#,wait_id,wait_event,wait_event_text,blocker_instance_id,blocker_sid,blocker_sess_serial#

lockData = lockdata
blockData = blockdata

[tablespace]
usedSql = select *
  from (SELECT a.tablespace_name tablespace_name,
               round(total / (1024 * 1024 * 1024), 2) total_gb,
               round(free / (1024 * 1024 * 1024), 2) free_gb,
               round((total - free) / (1024 * 1024 * 1024), 2) used_gb,
               round((total - free) / total, 2) * 100 used_pct
          FROM (SELECT tablespace_name, SUM(bytes) free
                  FROM dba_free_space
                 GROUP BY tablespace_name) a,
               (SELECT tablespace_name, SUM(bytes) total
                  FROM dba_data_files
                 GROUP BY tablespace_name) b
         WHERE a.tablespace_name = b.tablespace_name
        union all
        select c.tablespace_name tablespace_name,
               round(c.bytes / 1024 / 1024 / 1024, 2) total_gb,
               round((c.bytes - d.bytes_used) / 1024 / 1024 / 1024, 2) free_gb,
               round(d.bytes_used / 1024 / 1024 / 1024, 2) used_gb,
               round(d.bytes_used * 100 / c.bytes, 2) used_pct
          from (select tablespace_name, sum(bytes) bytes
                  from dba_temp_files
                 GROUP by tablespace_name) c,
               (select tablespace_name, sum(bytes_cached) bytes_used
                  from v$temp_extent_pool
                 GROUP by tablespace_name) d
         where c.tablespace_name = d.tablespace_name)
 order by 5 desc

usedNameList = tablespace_name,total_gb,free_gb,used_gb,used_pct

usedData = useddata

[object]
segmentSql = Select t.*
  From (Select Owner,
               Segment_Name,
               Segment_Type,
               Round(Sum(Bytes / 1024 / 1024 / 1024), 2)
          From Dba_Segments
         Group By Owner, Segment_Name, Segment_Type
         Order By 4 Desc) t
 Where Rownum <= 30
parttableSql = Select Table_Owner,
       Table_Name,
       Partition_Name,
       High_Value,
       Partition_Position
  From Dba_Tab_Partitions
 Where Table_Owner not in ('SYS','SYSTEM')
tabChipSql = Select Owner,
       Table_Name,
       Round((Blocks * 8192 / 1024 / 1024), 2),
       Round((Num_Rows * Avg_Row_Len / 1024 / 1024 / 0.9), 2),
       Round((Num_Rows * Avg_Row_Len / 1024 / 1024 / 0.9) /
             (Blocks * 8192 / 1024 / 1024),
             4)*100
  From Dba_Tables
 Where Blocks > 100
   And (Num_Rows * Avg_Row_Len / 1024 / 1024 / 0.9) /
       (Blocks * 8192 / 1024 / 1024) <= 0.3
   And Owner Not In ('SYS')
 Order By (Num_Rows * Avg_Row_Len / 1024 / 1024 / 0.9) /
          (Blocks * 8192 / 1024 / 1024) Desc
usersegmentSql = select owner, round(sum(bytes) / 1024 / 1024 / 1024, 2)
  from dba_segments
 group by owner
 order by 2 desc

segmentNameList = owner,segment_name,segment_type,size
parttableNameList = table_owner,table_name,parttion_name,high_value,partition_position
tabChipNameList = owner,table_name,theory_size,true_size,used_pct
usersegmentNameList = user,size

segmentData = segmentdata
parttableData = parttabledata
tabChipData = tabchipdata
usersegmentData = usersegmentdata

[statics]
tableStaticsSql = Select owner,table_name,object_type,last_analyzed,Stale_Stats
  From Dba_Tab_Statistics
 Where Stale_Stats = 'YES'
   And Owner Not In ('SYS','XDB')
indexStaticsSql =Select Owner,
       Index_Name,
       Table_Owner,
       Table_Name,
       Last_Analyzed,
       Stale_Stats
  From Dba_Ind_Statistics
 Where Stale_Stats = 'YES'
   And Owner Not In ('SYS','XDB')
staleReasonSql = Select T1.Table_Owner,
       T1.Table_Name,
       T1.Inserts,
       T1.Updates,
       T1.Deletes,
       T1.Timestamp
  From Dba_Tab_Modifications T1
  Join Dba_Tab_Statistics T2 On T1.Table_Owner = T2.owner
                            And T1.Table_Name = T2.Table_Name
 Where t2.Stale_Stats = 'YES'
   And t2.Owner Not In ('SYS', 'XDB')

tableStaticsNameList = owner,table_name,object_type,last_analyzed,stale_stats
indexStaticsNameList = owner,index_name,table_owner,table_name,last_analyzed,stale_stats
staleReasonNameList = table_owner,table_name,inserts,updates,deletes,timestamp

tableStaticsData = tableStaticsdata
indexStaticsData = indexStaticsdata
staleReasonData = stalereasondata

[archive]
daylyArchiveSql = Select To_Char(Completion_Time, 'yyyy-mm-dd'),
       Round(Sum(Blocks * Block_Size) / 1024 / 1024 / 1024, 3)
  From V$archived_Log
 Where Completion_Time >= Trunc(Sysdate) - 7
 Group By To_Char(Completion_Time, 'yyyy-mm-dd')
 Order By 1 Desc
hourlyArchiveSql = Select To_Char(Completion_Time, 'yyyy-mm-dd hh24'),
       Round(Sum(Blocks * Block_Size) / 1024 / 1024 / 1024, 3) "GB"
  From V$archived_Log
 Where Completion_Time >= Trunc(Sysdate) - 2
 Group By To_Char(Completion_Time, 'yyyy-mm-dd hh24')
 Order By 1 Desc

daylyArchiveNameList = day,size
hourlyArchiveNameList = hour,size

daylyArchiveData = daylyarchivedata
hourlyArchiveData = hourlyarchivedata

[slow]
currentDaySlowSql = Select *
  From (Select Substr(s.Sql_Text, 0, 20),
               s.Sql_Id,
               Round(Elapsed_Time / 1000000 / (Case
                       When (Executions = 0 Or Nvl(Executions, 1) = 1) Then
                        1
                       Else
                        Executions
                     End),
                     2) Exec_Time,
               s.Executions "执行次数",
               s.Optimizer_Cost "COST",
               s.Sorts,
               s.Module,
               s.Physical_Read_Bytes "物理读",
               s.Physical_Write_Requests "物理写",
               s.Rows_Processed "返回行数",
               s.Disk_Reads "磁盘读",
               s.Direct_Writes "直接路径写",
               s.Parsing_Schema_Name,
               s.Last_Active_Time
          From V$sqlarea s
         Where s.Command_Type In (2, 3, 5, 6, 7, 189)
         Order By Exec_Time Desc)
 Where Rownum <= 30

currentDaySlowNameList = sql,sql_id,exec_time,execs,cost,sorts,module,prb,pwr,rrows,dr,dw,username,last_time

currentDaySlowData = currentdayslowdata

[rman]
rmanSql = Select *
  From (Select Start_Time,
               End_Time,
               Round(Input_Bytes / 1024 / 1024 / 1024, 2),
               Round(Output_Bytes / 1024 / 1024 / 1024, 2),
               Status,
               Round(Elapsed_Seconds, 2),Elapsed_Seconds
          From V$rman_Backup_Job_Details
         Order By Start_Time Desc)
 Where Rownum <= 15

rmanNameList = start_time,end_time,input,output,status,runtime

rmanData = rmandata